// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BasicAssertion shallow renders the Contain assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong>
        Expected:
      </strong>
    </Col>
    <Col
      lg="6"
    >
      <strong>
        Value:
      </strong>
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          foo
           &lt;in&gt; value
        </span>
      </span>
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          foobar
        </span>
      </span>
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the DictCheck assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    >
      <span>
        Existence check: [
        <span
          key="check_foo_0"
          style={
            Object {
              "color": "black",
            }
          }
        >
          "foo"
        </span>
        , 
        <span
          key="check_alpha_1"
          style={
            Object {
              "color": "red",
            }
          }
        >
          "alpha"
        </span>
        ]
        <br />
        Absence check: [
        <span
          key="check_bar_0"
          style={
            Object {
              "color": "red",
            }
          }
        >
          "bar"
        </span>
        , 
        <span
          key="check_beta_1"
          style={
            Object {
              "color": "black",
            }
          }
        >
          "beta"
        </span>
        ]
      </span>
    </Col>
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong />
    </Col>
    <Col
      lg="6"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span />
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span />
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the DictCheck assertion which has no absent key 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    >
      <span>
        Existence check: [
        <span
          key="check_foo_0"
          style={
            Object {
              "color": "black",
            }
          }
        >
          "foo"
        </span>
        , 
        <span
          key="check_alpha_1"
          style={
            Object {
              "color": "red",
            }
          }
        >
          "alpha"
        </span>
        ]
        <br />
        Absence check: [
        ]
      </span>
    </Col>
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong />
    </Col>
    <Col
      lg="6"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span />
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span />
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the Equal assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong>
        Expected:
      </strong>
    </Col>
    <Col
      lg="6"
    >
      <strong>
        Value:
      </strong>
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <pre>
          foo
        </pre>
      </span>
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <pre>
          foo
        </pre>
      </span>
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the EqualExcludeSlices assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong>
        <span>
          Slices:
        </span>
      </strong>
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    >
      <span
        style={
          Object {
            "whiteSpace": "pre",
          }
        }
      >
        slice(0, 2, None)
slice(4, 8, None)
      </span>
      <hr />
    </Col>
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong>
        <span>
          Expected:
        </span>
      </strong>
    </Col>
    <Col
      lg="6"
    >
      <strong>
        <span>
          Value:
        </span>
      </strong>
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          [
          <span
            key="slice_a,b,3,4,c,d,e,f_0"
            style={
              Object {
                "color": "red",
              }
            }
          >
            "a"
          </span>
          , 
          <span
            key="slice_a,b,3,4,c,d,e,f_1"
            style={
              Object {
                "color": "red",
              }
            }
          >
            "b"
          </span>
          , 
          <span
            key="slice_a,b,3,4,c,d,e,f_2"
            style={
              Object {
                "color": "green",
              }
            }
          >
            3
          </span>
          , 
          <span
            key="slice_a,b,3,4,c,d,e,f_3"
            style={
              Object {
                "color": "green",
              }
            }
          >
            4
          </span>
          , 
          <span
            key="slice_a,b,3,4,c,d,e,f_4"
            style={
              Object {
                "color": "red",
              }
            }
          >
            "c"
          </span>
          , 
          <span
            key="slice_a,b,3,4,c,d,e,f_5"
            style={
              Object {
                "color": "red",
              }
            }
          >
            "d"
          </span>
          , 
          <span
            key="slice_a,b,3,4,c,d,e,f_6"
            style={
              Object {
                "color": "red",
              }
            }
          >
            "e"
          </span>
          , 
          <span
            key="slice_a,b,3,4,c,d,e,f_7"
            style={
              Object {
                "color": "red",
              }
            }
          >
            "f"
          </span>
          ]
        </span>
      </span>
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          [
          <span
            key="slice_1,2,3,4,5,6,7,8_0"
            style={
              Object {
                "color": "red",
              }
            }
          >
            1
          </span>
          , 
          <span
            key="slice_1,2,3,4,5,6,7,8_1"
            style={
              Object {
                "color": "red",
              }
            }
          >
            2
          </span>
          , 
          <span
            key="slice_1,2,3,4,5,6,7,8_2"
            style={
              Object {
                "color": "green",
              }
            }
          >
            3
          </span>
          , 
          <span
            key="slice_1,2,3,4,5,6,7,8_3"
            style={
              Object {
                "color": "green",
              }
            }
          >
            4
          </span>
          , 
          <span
            key="slice_1,2,3,4,5,6,7,8_4"
            style={
              Object {
                "color": "red",
              }
            }
          >
            5
          </span>
          , 
          <span
            key="slice_1,2,3,4,5,6,7,8_5"
            style={
              Object {
                "color": "red",
              }
            }
          >
            6
          </span>
          , 
          <span
            key="slice_1,2,3,4,5,6,7,8_6"
            style={
              Object {
                "color": "red",
              }
            }
          >
            7
          </span>
          , 
          <span
            key="slice_1,2,3,4,5,6,7,8_7"
            style={
              Object {
                "color": "red",
              }
            }
          >
            8
          </span>
          ]
        </span>
      </span>
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the EqualSlices assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong>
        <span>
          Slices:
        </span>
      </strong>
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    >
      <span
        style={
          Object {
            "whiteSpace": "pre",
          }
        }
      >
        slice(2, 4, None)
slice(6, 8, None)
      </span>
      <hr />
    </Col>
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong>
        <span>
          Expected:
        </span>
      </strong>
    </Col>
    <Col
      lg="6"
    >
      <strong>
        <span>
          Value:
        </span>
      </strong>
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          [
          <span
            key="slice_a,b,3,4,c,d,7,8_0"
            style={
              Object {
                "color": "black",
              }
            }
          >
            "a"
          </span>
          , 
          <span
            key="slice_a,b,3,4,c,d,7,8_1"
            style={
              Object {
                "color": "black",
              }
            }
          >
            "b"
          </span>
          , 
          <span
            key="slice_a,b,3,4,c,d,7,8_2"
            style={
              Object {
                "color": "green",
              }
            }
          >
            3
          </span>
          , 
          <span
            key="slice_a,b,3,4,c,d,7,8_3"
            style={
              Object {
                "color": "green",
              }
            }
          >
            4
          </span>
          , 
          <span
            key="slice_a,b,3,4,c,d,7,8_4"
            style={
              Object {
                "color": "black",
              }
            }
          >
            "c"
          </span>
          , 
          <span
            key="slice_a,b,3,4,c,d,7,8_5"
            style={
              Object {
                "color": "black",
              }
            }
          >
            "d"
          </span>
          , 
          <span
            key="slice_a,b,3,4,c,d,7,8_6"
            style={
              Object {
                "color": "green",
              }
            }
          >
            7
          </span>
          , 
          <span
            key="slice_a,b,3,4,c,d,7,8_7"
            style={
              Object {
                "color": "green",
              }
            }
          >
            8
          </span>
          ]
        </span>
      </span>
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          [
          <span
            key="slice_1,2,3,4,5,6,7,8_0"
            style={
              Object {
                "color": "black",
              }
            }
          >
            1
          </span>
          , 
          <span
            key="slice_1,2,3,4,5,6,7,8_1"
            style={
              Object {
                "color": "black",
              }
            }
          >
            2
          </span>
          , 
          <span
            key="slice_1,2,3,4,5,6,7,8_2"
            style={
              Object {
                "color": "green",
              }
            }
          >
            3
          </span>
          , 
          <span
            key="slice_1,2,3,4,5,6,7,8_3"
            style={
              Object {
                "color": "green",
              }
            }
          >
            4
          </span>
          , 
          <span
            key="slice_1,2,3,4,5,6,7,8_4"
            style={
              Object {
                "color": "black",
              }
            }
          >
            5
          </span>
          , 
          <span
            key="slice_1,2,3,4,5,6,7,8_5"
            style={
              Object {
                "color": "black",
              }
            }
          >
            6
          </span>
          , 
          <span
            key="slice_1,2,3,4,5,6,7,8_6"
            style={
              Object {
                "color": "green",
              }
            }
          >
            7
          </span>
          , 
          <span
            key="slice_1,2,3,4,5,6,7,8_7"
            style={
              Object {
                "color": "green",
              }
            }
          >
            8
          </span>
          ]
        </span>
      </span>
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the ExceptionNotRaised assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong>
        <span>
          Expected exceptions:
        </span>
      </strong>
    </Col>
    <Col
      lg="6"
    >
      <strong>
        <span>
          Raised exceptions:
        </span>
      </strong>
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          TypeError
        </span>
      </span>
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          &lt;type 'exceptions.KeyError'&gt;
           (value: 
          'bar'
          )
        </span>
      </span>
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the ExceptionRaised assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong>
        <span>
          Expected exceptions:
        </span>
      </strong>
    </Col>
    <Col
      lg="6"
    >
      <strong>
        <span>
          Raised exceptions:
        </span>
      </strong>
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          KeyError
        </span>
      </span>
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          &lt;type 'exceptions.KeyError'&gt;
           (value: 
          'bar'
          )
        </span>
      </span>
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the Fail assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    >
      <pre />
    </Col>
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong />
    </Col>
    <Col
      lg="6"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span />
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span />
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the FixCheck assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    >
      <span>
        Existence check: [
        <span
          key="check_26_0"
          style={
            Object {
              "color": "red",
            }
          }
        >
          26
        </span>
        , 
        <span
          key="check_22_1"
          style={
            Object {
              "color": "black",
            }
          }
        >
          22
        </span>
        , 
        <span
          key="check_11_2"
          style={
            Object {
              "color": "red",
            }
          }
        >
          11
        </span>
        ]
        <br />
        Absence check: [
        <span
          key="check_444_0"
          style={
            Object {
              "color": "black",
            }
          }
        >
          444
        </span>
        , 
        <span
          key="check_555_1"
          style={
            Object {
              "color": "red",
            }
          }
        >
          555
        </span>
        ]
      </span>
    </Col>
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong />
    </Col>
    <Col
      lg="6"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span />
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span />
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the Greater assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong>
        Expected:
      </strong>
    </Col>
    <Col
      lg="6"
    >
      <strong>
        Value:
      </strong>
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          value 
          &gt;
           
          2
        </span>
      </span>
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        5
      </span>
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the GreaterEqual assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong>
        Expected:
      </strong>
    </Col>
    <Col
      lg="6"
    >
      <strong>
        Value:
      </strong>
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          value 
          &gt;=
           
          2
        </span>
      </span>
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        2
      </span>
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the IsClose assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong>
        Expected:
      </strong>
    </Col>
    <Col
      lg="6"
    >
      <strong>
        Value:
      </strong>
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          value 
          ~=
           
          95
           within rel_tol=
          0.1
           or abs_tol=
          0
        </span>
      </span>
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        100
      </span>
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the IsFalse assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong>
        Expected:
      </strong>
    </Col>
    <Col
      lg="6"
    >
      <strong>
        Value:
      </strong>
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          value is False
        </span>
      </span>
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          False
        </span>
      </span>
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the IsTrue assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong>
        Expected:
      </strong>
    </Col>
    <Col
      lg="6"
    >
      <strong>
        Value:
      </strong>
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          value is True
        </span>
      </span>
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          True
        </span>
      </span>
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the Less assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong>
        Expected:
      </strong>
    </Col>
    <Col
      lg="6"
    >
      <strong>
        Value:
      </strong>
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          value 
          &lt;
           
          20
        </span>
      </span>
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        10
      </span>
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the LessEqual assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong>
        Expected:
      </strong>
    </Col>
    <Col
      lg="6"
    >
      <strong>
        Value:
      </strong>
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          value 
          &lt;=
           
          10
        </span>
      </span>
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        10
      </span>
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the LineDiff assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong>
        <span>
          No differences.
        </span>
      </strong>
    </Col>
    <Col
      lg="6"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span />
      </span>
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span />
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the Log assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    >
      <pre>
        <Linkify
          options={
            Object {
              "target": "_blank",
              "validate": Object {
                "url": [Function],
              },
            }
          }
        >
          This is a log message, it will be displayed along with other assertion details.
        </Linkify>
      </pre>
    </Col>
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong />
    </Col>
    <Col
      lg="6"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span />
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span />
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the NotContain assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong>
        Expected:
      </strong>
    </Col>
    <Col
      lg="6"
    >
      <strong>
        Value:
      </strong>
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          10
           &lt;not in&gt; value
        </span>
      </span>
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <span>
          {'a': 1, 'b': 2}
        </span>
      </span>
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the NotEqual assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong>
        Expected:
      </strong>
    </Col>
    <Col
      lg="6"
    >
      <strong>
        Value:
      </strong>
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <pre>
          <span>
            &lt;not&gt; 
          </span>
          bar
        </pre>
      </span>
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <pre>
          foo
        </pre>
      </span>
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;

exports[`BasicAssertion shallow renders the highlight Equal assertion 1`] = `
<Fragment>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
  <Row>
    <Col
      lg="6"
    >
      <strong>
        Expected:
      </strong>
    </Col>
    <Col
      lg="6"
    >
      <strong>
        Value:
      </strong>
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <pre>
          <span
            key="diffLeftEq"
            style={
              Object {
                "color": "#228F1D",
              }
            }
          >
            This is a 
          </span>
          <span
            key="diffLeftNe"
            style={
              Object {
                "color": "#A2000C",
                "fontWeight": "bold",
                "textDecoration": "underline",
              }
            }
          >
            short thing
          </span>
        </pre>
      </span>
    </Col>
    <Col
      className="contentSpan_11nzg99"
      lg="6"
    >
      <span>
        <pre>
          <span
            key="diffrightEq"
            style={
              Object {
                "color": "#228F1D",
              }
            }
          >
            This is a 
          </span>
          <span
            key="diffrightNe"
            style={
              Object {
                "color": "#A2000C",
                "fontWeight": "bold",
                "textDecoration": "underline",
              }
            }
          >
            long thing with some extra at the end
          </span>
        </pre>
      </span>
    </Col>
  </Row>
  <Row>
    <Col
      lg="12"
    >
      <strong />
    </Col>
  </Row>
  <Row>
    <Col
      className="contentSpan_11nzg99"
      lg="12"
    />
  </Row>
</Fragment>
`;
